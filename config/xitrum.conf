xitrum {
  # Comment out if you don't want to protect
  # the whole site with basic authentication
  #basicAuth {
    #realm    = xitrum
    #username = xitrum
    #password = xitrum
  #}

  # Hostname or IP
  # Comment out to listen on all network interfaces
  #interface = localhost

  # Comment out the one you don't want to start
  port {
    http              = 8081
    #https             = 4430
    #flashSocketPolicy = 8430  # flash_socket_policy.xml will be returned
  }

  # Not used if port.https above is disabled.
  # You can use KeyStore Explorer to create self-signed keystore:
  #   http://www.lazgosoftware.com/kse/index.html
  # More info:
  #   http://wiki.eclipse.org/Jetty/Howto/Configure_SSL
  keystore {
    path                = config/keystore.jks
    password            = xitrum
    certificatePassword = xitrum
  }

  # Comment out if you don't use reverse proxy
  #reverseProxy {
    # If you run Xitrum behind a proxy, for Xitrum to determine the origin's IP,
    # the absolute URL etc., set IP of the proxies here. For security, only proxies
    # with IPs set here are allowed. Remember to config the proxy to set the
    # following headers properly (see your proxy documentation):
    #   X-Forwarded-Host
    #   X-Forwarded-For
    #   X-Forwarded-Proto, or X-Forwarded-Scheme, or X-Forwarded-Ssl
    #ips = ["127.0.0.1"]

    # Set baseUrl to "/my_site" if you want the URL to be http://<domain>/my_site/...
    # Otherwise set it to empty string
    #baseUrl = /my_site
  #}

  templateEngine = xitrum.view.ScalateTemplateEngine

  scalateDefaultType = jade              # jade, mustache, scaml, or ssp
  scalateDir         = src/main/scalate  # Only effective in development mode

  # clusterMember, liteMember, or javaClient
  # For clusterMember or liteMember mode, see hazelcast_cluster_or_lite_member.xml
  # For javaClient mode, see hazelcast_java_client.properties
  hazelcastMode = clusterMember

  session {
    # Store sessions on client side
    store = xitrum.scope.session.CookieSessionStore

    # Store sessions on server side
    #store = xitrum.scope.session.HazelcastSessionStore

    # If you run multiple sites on the same domain, make sure that there's no
    # cookie name conflict between sites
    cookieName = _session

    # Key to encrypt session cookie etc.
    # Do not use the example below! Use your own!
    # If you deploy your application to several instances be sure to use the same key!
    secureKey = ajconghoaofuxahoi92chunghiaujivietnamlasdoclapjfltudoil98hanhphucup8
  }

  request {
    charset = UTF-8

    # Increase if you want to allow bigger file upload
    # (Google App Engine's limit: 32 MB)
    maxSizeInMB = 32

    # Sensitive parameters that should not be logged to access log
    filteredParams = ["password", "passwordConfirm"]
  }

  response {
    # Small static files are cached in memory.
    # Files bigger than maxSizeInKBOfCachedStaticFiles will not be cached in memory.
    maxSizeInKBOfCachedStaticFiles = 512
    maxNumberOfCachedStaticFiles   = 1024

    # true:  ETag response header is set for  static files.
    #        Before reusing the files, clients must send requests to server
    #        to revalidate if the files have been changed. Use this when you
    #        create HTML directly with static files.
    # false: Response headers are set so that clients will cache static files
    #        for one year. Use this when you create HTML from templates and use
    #        urlForPublic("path/to/static/file") in templates.
    clientMustRevalidateStaticFiles = false
  }
}
